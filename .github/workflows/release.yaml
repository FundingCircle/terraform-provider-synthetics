on:
  release:
    types: [created]
name: Build Release
jobs:
  release-linux-386:
    name: release linux/386
    runs-on: ubuntu-latest
    env:
      GO111MODULE: "on"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GOARCH: "386"
      GOOS: linux
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: Build
      run: go build -v -o ${GOOS}_${GOARCH}-terraform-provider-aws-synthetics_${GITHUB_REF##*/} .

    - name: Upload the artifacts
      uses: skx/github-action-publish-binaries@master
      with:
        args: '*terraform-provider-aws-synthetics*'

  release-linux-amd64:
    name: release linux/amd64
    runs-on: ubuntu-latest
    env:
      GO111MODULE: "on"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GOARCH: "amd64"
      GOOS: linux
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: Build
      run: go build -v -o ${GOOS}_${GOARCH}-terraform-provider-aws-synthetics_${GITHUB_REF##*/} .

    - name: Upload the artifacts
      uses: skx/github-action-publish-binaries@master
      with:
        args: '*terraform-provider-aws-synthetics*'
  release-linux-arm:
    name: release linux/386
    runs-on: ubuntu-latest
    env:
      GO111MODULE: "on"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GOARCH: "arm"
      GOOS: linux
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: Build
      run: go build -v -o ${GOOS}_${GOARCH}-terraform-provider-aws-synthetics_${GITHUB_REF##*/} .

    - name: Upload the artifacts
      uses: skx/github-action-publish-binaries@master
      with:
        args: '*terraform-provider-aws-synthetics*'
  release-linux-arm64:
    name: release linux/arm64
    runs-on: ubuntu-latest
    env:
      GO111MODULE: "on"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GOARCH: "arm64"
      GOOS: linux
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: Build
      run: go build -v -o ${GOOS}_${GOARCH}-terraform-provider-aws-synthetics_${GITHUB_REF##*/} .

    - name: Upload the artifacts
      uses: skx/github-action-publish-binaries@master
      with:
        args: '*terraform-provider-aws-synthetics*'
  release-darwin-amd64:
    name: release darwin/amd64
    runs-on: ubuntu-latest
    env:
      GO111MODULE: "on"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GOARCH: "amd64"
      GOOS: darwin
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: Build
      run: go build -v -o ${GOOS}_${GOARCH}-terraform-provider-aws-synthetics_${GITHUB_REF##*/} .

    - name: Upload the artifacts
      uses: skx/github-action-publish-binaries@master
      with:
        args: '*terraform-provider-aws-synthetics*'
  release-windows-amd64:
    name: release windows/amd64
    runs-on: ubuntu-latest
    env:
      GO111MODULE: "on"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GOARCH: "amd64"
      GOOS: windows
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: Build
      run: go build -v -o ${GOOS}_${GOARCH}-terraform-provider-aws-synthetics_${GITHUB_REF##*/} .

    - name: Upload the artifacts
      uses: skx/github-action-publish-binaries@master
      with:
        args: '*terraform-provider-aws-synthetics*'